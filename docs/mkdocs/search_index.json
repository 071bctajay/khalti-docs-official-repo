{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to Khalti Merchant API documentation.\n\n\nIntroduction\n\n\nKhalti is the new generation Payment Gateway, Digital Wallet and API provider for various services. \nWe provide you with true Payment Gateway, where you can accepts payments from:\n\n\n\n\nKhalti User\n\n\nNet Banking customers of our partner banks (need not be Khalti user)\n\n\n\n\nFeatures\n\n\n\n\nHighly secure\n\n\nEasy to accept payments\n\n\nIncase of wallet payment, Customer can pay from your software directly without redirecting to our website.\n\n\nNetbanking users can choose their bank and make payment.\n\n\nNo hassle to integrate with individual banks\n\n\nTransaction List, with the feature of issuing refund, filtering and download report.\n\n\nMulti user system\n\n\nRealtime balance\n\n\nWithdraw fund\n\n\n\n\nFor Queries, feel free to call us at 9801165568 or email merchantapi@khalti.com\n\n\nGetting Started",
            "title": "Welcome"
        },
        {
            "location": "/#introduction",
            "text": "Khalti is the new generation Payment Gateway, Digital Wallet and API provider for various services. \nWe provide you with true Payment Gateway, where you can accepts payments from:   Khalti User  Net Banking customers of our partner banks (need not be Khalti user)",
            "title": "Introduction"
        },
        {
            "location": "/#features",
            "text": "Highly secure  Easy to accept payments  Incase of wallet payment, Customer can pay from your software directly without redirecting to our website.  Netbanking users can choose their bank and make payment.  No hassle to integrate with individual banks  Transaction List, with the feature of issuing refund, filtering and download report.  Multi user system  Realtime balance  Withdraw fund   For Queries, feel free to call us at 9801165568 or email merchantapi@khalti.com",
            "title": "Features"
        },
        {
            "location": "/#getting-started",
            "text": "",
            "title": "Getting Started"
        },
        {
            "location": "/getting-started/",
            "text": "There are four steps for integrating Khalti payment to a merchant system.\n\n\n\n\n1. Signup as merchant\n\n\n2. Understand how khalti payment works\n\n\n3. Test integration\n\n\n3.1. Client side integration\n\n\n3.2. Server side integration\n\n\n4. Deploy integration\n\n\n\n\n1. Signup as merchant\n\n\nFirst of all you will need a merchant and a consumer accounts.\nMerchant is an online business service like e-commerce websites, ISP online payment, Movie online purchase etc.\nConsumer is an end user who uses Khalti to purchase products or services from merchants.\n\n\nPlease follow links below to create a merchant and a consumer accounts if you have not already.\n\n\n\n\nCreate a merchant account\n\n\nCreate a consumer account\n\n\n\n\n2. Understand Khalti payment process\n\n\n\n\n3. Test integration\n\n\nNow that you know how Khalti payment works. Its time to integrate it into your system.\nA merchant must complete test integration using test keys. Test keys start with \ntest_\n.\nIn test mode, transactions are sandboxed, which means fund is not moved from a consumer to the merchant.\nKhalti must to be integrated at client and server. A client initiates and confirms payment while server verifies it.\n\n\n3.1. Client side integration\n\n\nFor now there is only one way to integrate Khalti at client side, through SDKs.\nWe have developed SDKs for every major plaforms and we call it \nCheckout\n.\n\n\nCheckouts provide all the necessary UIs and perform necessary processes to initiate and confirm payment.\n\n\n\n\nWeb\n\n\nAndroid\n\n\niOS\n (Comming soon)\n\n\n\n\n3.2. Server side integration\n\n\nAfter user confirms payment, it has to be verified by Khalti.\nFund from user's account is move to merchant only if verification succeeds.\nVerification must be done by the merchant server using a secret key.\n\n\n\n\nVerification api\n\n\nTransaction api\n\n\n\n\n4. Deploy integration\n\n\nAfter successful integration test, the merchant must replace test keys with live ones.\nLive keys start with \nlive_X_X\n. Replace \ntest_public_X\n and \ntest_secret_X\n keys with \nlive_public_X\n and \nlive_secret_X\n keys respectively.",
            "title": "Getting started"
        },
        {
            "location": "/getting-started/#1-signup-as-merchant",
            "text": "First of all you will need a merchant and a consumer accounts.\nMerchant is an online business service like e-commerce websites, ISP online payment, Movie online purchase etc.\nConsumer is an end user who uses Khalti to purchase products or services from merchants.  Please follow links below to create a merchant and a consumer accounts if you have not already.   Create a merchant account  Create a consumer account",
            "title": "1. Signup as merchant"
        },
        {
            "location": "/getting-started/#2-understand-khalti-payment-process",
            "text": "",
            "title": "2. Understand Khalti payment process"
        },
        {
            "location": "/getting-started/#3-test-integration",
            "text": "Now that you know how Khalti payment works. Its time to integrate it into your system.\nA merchant must complete test integration using test keys. Test keys start with  test_ .\nIn test mode, transactions are sandboxed, which means fund is not moved from a consumer to the merchant.\nKhalti must to be integrated at client and server. A client initiates and confirms payment while server verifies it.",
            "title": "3. Test integration"
        },
        {
            "location": "/getting-started/#31-client-side-integration",
            "text": "For now there is only one way to integrate Khalti at client side, through SDKs.\nWe have developed SDKs for every major plaforms and we call it  Checkout .  Checkouts provide all the necessary UIs and perform necessary processes to initiate and confirm payment.   Web  Android  iOS  (Comming soon)",
            "title": "3.1. Client side integration"
        },
        {
            "location": "/getting-started/#32-server-side-integration",
            "text": "After user confirms payment, it has to be verified by Khalti.\nFund from user's account is move to merchant only if verification succeeds.\nVerification must be done by the merchant server using a secret key.   Verification api  Transaction api",
            "title": "3.2. Server side integration"
        },
        {
            "location": "/getting-started/#4-deploy-integration",
            "text": "After successful integration test, the merchant must replace test keys with live ones.\nLive keys start with  live_X_X . Replace  test_public_X  and  test_secret_X  keys with  live_public_X  and  live_secret_X  keys respectively.",
            "title": "4. Deploy integration"
        },
        {
            "location": "/checkout/web/",
            "text": "Khalti checkout can be integrated with or without build tools like \n\nWebpack\n and \nRollup\n.\n\n\nTo get the feel of how Khalti checkout looks click the button below.\n\n\nPay with Khalti\n\n\nWithout build tools\n\n\n<html>\n<head>\n    <script src=\"https://khalti.com/static/khalti-checkout.js\"></script>\n</head>\n<body>\n    ...\n    <!-- Place this where you need payment button -->\n    <button id=\"payment-button\">Pay with Khalti</button>\n    <!-- Place this where you need payment button -->\n    <!-- Paste this code anywhere in you body tag -->\n    <script>\n        var config = {\n            // replace the publicKey with yours\n            \"publicKey\": \"test_public_key_dc74e0fd57cb46cd93832aee0a507256\",\n            \"productIdentity\": \"1234567890\",\n            \"productName\": \"Dragon\",\n            \"productUrl\": \"http://gameofthrones.wikia.com/wiki/Dragons\",\n            \"eventHandler\": {\n                onSuccess (payload) {\n                    // hit merchant api for initiating verfication\n                    console.log(payload);\n                },\n                onError (error) {\n                    console.log(error);\n                }\n            }\n        };\n\n        var checkout = new KhaltiCheckout(config);\n        var btn = document.getElementById(\"payment-button\");\n        btn.onclick = function () {\n            checkout.show({amount: 1000});\n        }\n    </script>\n    <!-- Paste this code anywhere in you body tag -->\n    ...\n</body>\n</html>\n\n\n\n\nClick here\n for details on config parameters.\n\n\nWith build tools\n\n\nKhalti checkout can be bundled with build tools like Webpack, Rollup, etc.\n\n\n1. Install \nkhalti-web\n\n\nUsing yarn\n\n\nyarn add khalti-web\n\n\nUsing npm\n\n\nnpm install khalti-web --save\n\n\n2. Import and use it in your desired component\n\n\nimport KhaltiCheckout from \"khalti-web\";\n\nlet config = {\n    // replace this key with yours\n    \"publicKey\": \"test_public_key_dc74e0fd57cb46cd93832aee0a507256\",\n    \"productIdentity\": \"1234567890\",\n    \"productName\": \"Drogon\",\n    \"productUrl\": \"http://gameofthrones.com/buy/Dragons\",\n    \"eventHandler\": {\n        onSuccess (payload) {\n            // hit merchant api for initiating verfication\n            console.log(payload);\n        },\n        // onError handler is optional\n        onError (error) {\n            // handle errors\n            console.log(error);\n        }\n    }\n};\n\nlet checkout = new KhaltiCheckout(config);\nlet btn = document.getElementById(\"payment-button\");\nbtn.onclick = function () {\n    checkout.show({amount: 1000});\n}\n\n\n\n\nAPI\n\n\n\n\nKhaltiCheckout(configuration?)\n\n\n\n\nInstantiate \nKhaltiCheckout\n class and pass a \nconfiguration\n.\n\n\n\n\nshow(configuration?)\n\n\n\n\nDisplays the Khalti checkout widget.\n\n\n\n\nhide()\n\n\n\n\nHide the widget.\n\n\nConfiguration\n\n\nConfiguration is a Javascript object with following attributes.\n\n\n\n\n\n\npublicKey\n: Test or live public key which identifies the merchant.\n\n\n\n\n\n\namount\n: Amount to pay. It must be in paisa.\n\n\n\n\n\n\nproductIdentity\n: Unique product identifier at merchant.\n\n\n\n\n\n\nproductName\n: Name of product\n\n\n\n\n\n\nproductUrl(optional)\n: Url of the product.\n\n\n\n\n\n\neventHandler\n:\n\n\nIt is an object with two methods:\n\n\n\n\n\n\nonSuccess\n\n    This method is called once a transaction is confirmed by a user.\n    It receives transaction \ntoken\n and \namount\n among other payloads.\n    One should implement this method to initiate payment verification \n    at merchant which in turn will make verification request at Khalti.\n    For documentation on verification follow this \nlink\n.\n\n\n\n\n\n\nonError (optional)\n\n    This method is optional. If implemented, it will receive errors that occured during payment initiation and confirmation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        var config = {\n            // replace the publicKey with yours\n            \"publicKey\": \"test_public_key_dc74e0fd57cb46cd93832aee0a507256\",\n            \"productIdentity\": \"1234567890\",\n            \"productName\": \"Dragon\",\n            \"productUrl\": \"http://gameofthrones.wikia.com/wiki/Dragons\",\n            \"eventHandler\": {\n                onSuccess (payload) {\n                    // hit merchant api for initiating verfication\n                    console.log(payload);\n                },\n                onError (error) {\n                    console.log(error);\n                }\n            }\n        };\n\n        var checkout = new KhaltiCheckout(config);\n        var btn = document.getElementById(\"payment-button\");\n        btn.onclick = function () {\n            checkout.show({amount: 1000});\n        }",
            "title": "Web"
        },
        {
            "location": "/checkout/web/#without-build-tools",
            "text": "<html>\n<head>\n    <script src=\"https://khalti.com/static/khalti-checkout.js\"></script>\n</head>\n<body>\n    ...\n    <!-- Place this where you need payment button -->\n    <button id=\"payment-button\">Pay with Khalti</button>\n    <!-- Place this where you need payment button -->\n    <!-- Paste this code anywhere in you body tag -->\n    <script>\n        var config = {\n            // replace the publicKey with yours\n            \"publicKey\": \"test_public_key_dc74e0fd57cb46cd93832aee0a507256\",\n            \"productIdentity\": \"1234567890\",\n            \"productName\": \"Dragon\",\n            \"productUrl\": \"http://gameofthrones.wikia.com/wiki/Dragons\",\n            \"eventHandler\": {\n                onSuccess (payload) {\n                    // hit merchant api for initiating verfication\n                    console.log(payload);\n                },\n                onError (error) {\n                    console.log(error);\n                }\n            }\n        };\n\n        var checkout = new KhaltiCheckout(config);\n        var btn = document.getElementById(\"payment-button\");\n        btn.onclick = function () {\n            checkout.show({amount: 1000});\n        }\n    </script>\n    <!-- Paste this code anywhere in you body tag -->\n    ...\n</body>\n</html>  Click here  for details on config parameters.",
            "title": "Without build tools"
        },
        {
            "location": "/checkout/web/#with-build-tools",
            "text": "Khalti checkout can be bundled with build tools like Webpack, Rollup, etc.",
            "title": "With build tools"
        },
        {
            "location": "/checkout/web/#1-install-khalti-web",
            "text": "",
            "title": "1. Install khalti-web"
        },
        {
            "location": "/checkout/web/#using-yarn",
            "text": "yarn add khalti-web",
            "title": "Using yarn"
        },
        {
            "location": "/checkout/web/#using-npm",
            "text": "npm install khalti-web --save",
            "title": "Using npm"
        },
        {
            "location": "/checkout/web/#2-import-and-use-it-in-your-desired-component",
            "text": "import KhaltiCheckout from \"khalti-web\";\n\nlet config = {\n    // replace this key with yours\n    \"publicKey\": \"test_public_key_dc74e0fd57cb46cd93832aee0a507256\",\n    \"productIdentity\": \"1234567890\",\n    \"productName\": \"Drogon\",\n    \"productUrl\": \"http://gameofthrones.com/buy/Dragons\",\n    \"eventHandler\": {\n        onSuccess (payload) {\n            // hit merchant api for initiating verfication\n            console.log(payload);\n        },\n        // onError handler is optional\n        onError (error) {\n            // handle errors\n            console.log(error);\n        }\n    }\n};\n\nlet checkout = new KhaltiCheckout(config);\nlet btn = document.getElementById(\"payment-button\");\nbtn.onclick = function () {\n    checkout.show({amount: 1000});\n}",
            "title": "2. Import and use it in your desired component"
        },
        {
            "location": "/checkout/web/#api",
            "text": "KhaltiCheckout(configuration?)   Instantiate  KhaltiCheckout  class and pass a  configuration .   show(configuration?)   Displays the Khalti checkout widget.   hide()   Hide the widget.",
            "title": "API"
        },
        {
            "location": "/checkout/web/#configuration",
            "text": "Configuration is a Javascript object with following attributes.    publicKey : Test or live public key which identifies the merchant.    amount : Amount to pay. It must be in paisa.    productIdentity : Unique product identifier at merchant.    productName : Name of product    productUrl(optional) : Url of the product.    eventHandler :  It is an object with two methods:    onSuccess \n    This method is called once a transaction is confirmed by a user.\n    It receives transaction  token  and  amount  among other payloads.\n    One should implement this method to initiate payment verification \n    at merchant which in turn will make verification request at Khalti.\n    For documentation on verification follow this  link .    onError (optional) \n    This method is optional. If implemented, it will receive errors that occured during payment initiation and confirmation.       \n        var config = {\n            // replace the publicKey with yours\n            \"publicKey\": \"test_public_key_dc74e0fd57cb46cd93832aee0a507256\",\n            \"productIdentity\": \"1234567890\",\n            \"productName\": \"Dragon\",\n            \"productUrl\": \"http://gameofthrones.wikia.com/wiki/Dragons\",\n            \"eventHandler\": {\n                onSuccess (payload) {\n                    // hit merchant api for initiating verfication\n                    console.log(payload);\n                },\n                onError (error) {\n                    console.log(error);\n                }\n            }\n        };\n\n        var checkout = new KhaltiCheckout(config);\n        var btn = document.getElementById(\"payment-button\");\n        btn.onclick = function () {\n            checkout.show({amount: 1000});\n        }",
            "title": "Configuration"
        },
        {
            "location": "/checkout/android/",
            "text": "Khalti checkout widget for android\n\n\nComming soon ...",
            "title": "Android"
        },
        {
            "location": "/checkout/android/#khalti-checkout-widget-for-android",
            "text": "Comming soon ...",
            "title": "Khalti checkout widget for android"
        },
        {
            "location": "/checkout/ios/",
            "text": "Khalti checkout widget for iOS\n\n\nComming soon",
            "title": "iOS"
        },
        {
            "location": "/checkout/ios/#khalti-checkout-widget-for-ios",
            "text": "Comming soon",
            "title": "Khalti checkout widget for iOS"
        },
        {
            "location": "/api/verification/",
            "text": "Verification\n\n\nAfter user confirms payment, it is verified server to server.\nA verification request must have following signature.\n\n\n\n\nurl\n: \"https://khalti.com/api/payment/verify/\"\n\n\nmethod\n: \"POST\"\n\n\nheaders\n:\n\n\nAuthorization\n: test or live secret key in the form \nKey <secret key>\n\n\n\n\n\n\npayload\n:\n\n\ntoken\n: Token given my Khalti after payment confirmation.\n\n\namount\n: Amount (in paisa) with which payment was initiated.\n\n\n\n\n\n\n\n\nExamples\n\n\nAssuming the token that we received is \nQUao9cqFzxPgvWJNi9aKac\n.\n\n\nCURL\n\n\ncurl https://khalti.com/api/payment/verify/ \\\n   -H \"Authorization:Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b\" \\\n   -d amount=1000 \\\n   -d token=QUao9cqFzxPgvWJNi9aKac\n\n\n\n\nPHP\n\n\n    $args = http_build_query(array(\n        'token' => 'QUao9cqFzxPgvWJNi9aKac',\n        'amount'  => 1000\n       );\n\n    $url = \"https://khalti.com/api/payment/verify/\";\n\n    # Make the call using API.\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_POST, 1);\n    curl_setopt($ch, CURLOPT_POSTFIELDS,$args);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n    $headers = ['Authorization: Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b'];\n    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n\n    // Response\n    $response = curl_exec($ch);\n    $status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n    curl_close($ch);\n\n\n\n\n\nPython\n\n\nimport requests\n\nurl = \"https://khalti.com/api/payment/verify/\"\npayload = {\n  \"token\": \"QUao9cqFzxPgvWJNi9aKac\"\n  \"amount\": 1000\n}\nheaders = {\n  \"Authorization\": \"Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b\"\n}\n\nresponse = requests.post(url, payload, headers = headers)",
            "title": "Verification"
        },
        {
            "location": "/api/verification/#verification",
            "text": "After user confirms payment, it is verified server to server.\nA verification request must have following signature.   url : \"https://khalti.com/api/payment/verify/\"  method : \"POST\"  headers :  Authorization : test or live secret key in the form  Key <secret key>    payload :  token : Token given my Khalti after payment confirmation.  amount : Amount (in paisa) with which payment was initiated.",
            "title": "Verification"
        },
        {
            "location": "/api/verification/#examples",
            "text": "Assuming the token that we received is  QUao9cqFzxPgvWJNi9aKac .",
            "title": "Examples"
        },
        {
            "location": "/api/verification/#curl",
            "text": "curl https://khalti.com/api/payment/verify/ \\\n   -H \"Authorization:Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b\" \\\n   -d amount=1000 \\\n   -d token=QUao9cqFzxPgvWJNi9aKac",
            "title": "CURL"
        },
        {
            "location": "/api/verification/#php",
            "text": "$args = http_build_query(array(\n        'token' => 'QUao9cqFzxPgvWJNi9aKac',\n        'amount'  => 1000\n       );\n\n    $url = \"https://khalti.com/api/payment/verify/\";\n\n    # Make the call using API.\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_POST, 1);\n    curl_setopt($ch, CURLOPT_POSTFIELDS,$args);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n    $headers = ['Authorization: Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b'];\n    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n\n    // Response\n    $response = curl_exec($ch);\n    $status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n    curl_close($ch);",
            "title": "PHP"
        },
        {
            "location": "/api/verification/#python",
            "text": "import requests\n\nurl = \"https://khalti.com/api/payment/verify/\"\npayload = {\n  \"token\": \"QUao9cqFzxPgvWJNi9aKac\"\n  \"amount\": 1000\n}\nheaders = {\n  \"Authorization\": \"Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b\"\n}\n\nresponse = requests.post(url, payload, headers = headers)",
            "title": "Python"
        },
        {
            "location": "/api/transaction/",
            "text": "Khalti provides API for retrieving list of payments made to a merchant.\nA merchant should use secret test and live keys for retrieving test and live payments respectively.\n\n\nReplace \n<secret key>\n with test or live secret key as per required.\n\n\nList payments\n\n\nCURL\n\n\ncurl https://khalti.com/api/transaction/ -H \"Authorization:Key <secret key>\n\n\n\n\nPHP\n\n\n\n    $url = \"https://khalti.com/api/transaction/\";\n\n    # Make the call using API.\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n    $headers = ['Authorization: Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b'];\n    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n\n    // Response\n    $response = curl_exec($ch);\n    $status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n    curl_close($ch);\n\n\n\n\n\nPython\n\n\nimport requests\n\nurl = \"https://khalti.com/api/transaction/\"\npayload = {}\nheaders = {\n  \"Authorization\": \"Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b\"\n}\n\nresponse = requests.get(url, payload, headers = headers)\n\n\n\n\nRetrieve a payment\n\n\nCURL\n\n\ncurl https://khalti.com/api/transaction/<idx>/ -H \"Authorization:Key <secret key>\n\n\n\n\nPHP\n\n\n\n    $url = \"https://khalti.com/api/transaction/<idx>/\";\n\n    # Make the call using API.\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n    $headers = ['Authorization: Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b'];\n    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n\n    // Response\n    $response = curl_exec($ch);\n    $status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n    curl_close($ch);\n\n\n\n\n\nPython\n\n\nimport requests\n\nurl = \"https://khalti.com/api/transaction/<idx>/\"\nheaders = {\n  \"Authorization\": \"Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b\"\n}\n\nresponse = requests.get(url, headers = headers)",
            "title": "Transaction"
        },
        {
            "location": "/api/transaction/#list-payments",
            "text": "",
            "title": "List payments"
        },
        {
            "location": "/api/transaction/#curl",
            "text": "curl https://khalti.com/api/transaction/ -H \"Authorization:Key <secret key>",
            "title": "CURL"
        },
        {
            "location": "/api/transaction/#php",
            "text": "$url = \"https://khalti.com/api/transaction/\";\n\n    # Make the call using API.\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n    $headers = ['Authorization: Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b'];\n    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n\n    // Response\n    $response = curl_exec($ch);\n    $status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n    curl_close($ch);",
            "title": "PHP"
        },
        {
            "location": "/api/transaction/#python",
            "text": "import requests\n\nurl = \"https://khalti.com/api/transaction/\"\npayload = {}\nheaders = {\n  \"Authorization\": \"Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b\"\n}\n\nresponse = requests.get(url, payload, headers = headers)",
            "title": "Python"
        },
        {
            "location": "/api/transaction/#retrieve-a-payment",
            "text": "",
            "title": "Retrieve a payment"
        },
        {
            "location": "/api/transaction/#curl_1",
            "text": "curl https://khalti.com/api/transaction/<idx>/ -H \"Authorization:Key <secret key>",
            "title": "CURL"
        },
        {
            "location": "/api/transaction/#php_1",
            "text": "$url = \"https://khalti.com/api/transaction/<idx>/\";\n\n    # Make the call using API.\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n    $headers = ['Authorization: Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b'];\n    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n\n    // Response\n    $response = curl_exec($ch);\n    $status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n    curl_close($ch);",
            "title": "PHP"
        },
        {
            "location": "/api/transaction/#python_1",
            "text": "import requests\n\nurl = \"https://khalti.com/api/transaction/<idx>/\"\nheaders = {\n  \"Authorization\": \"Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b\"\n}\n\nresponse = requests.get(url, headers = headers)",
            "title": "Python"
        }
    ]
}